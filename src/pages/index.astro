---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import heroImage from '../assets/hero-image.png';
// Phosphor Icons for Amazon placeholders
import { DeviceMobile, Book, TShirt, House, Tree, CookingPot, PuzzlePiece, SoccerBall, PawPrint, Baby, Car, Briefcase, MusicNote, Heartbeat, ShoppingBag } from 'phosphor-icons';

// Load blog posts and gift guides, including drafts only in preview
const isPreview = import.meta.env.IS_PREVIEW === 'true';
const blogPosts = await getCollection('blog', ({ data }) => isPreview || !data.draft);
// Combine and sort all content by date
const allContent = blogPosts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Define structured data for the homepage
const structuredData = {
	"@context": "https://schema.org",
	"@type": "WebSite",
	"name": "BrightGift - AI Gift Idea Generator",
	"url": "https://bright-gift.com",
	"description": "Find the perfect gift in seconds with our AI-powered gift idea generator. Personalized recommendations for any recipient, budget, and occasion.",
	"potentialAction": {
		"@type": "SearchAction",
		"target": "https://bright-gift.com/#tool?recipient={recipient}&interests={interests}",
		"query-input": [
			"required name=recipient",
			"required name=interests"
		]
	}
};

// Organization schema
const organizationData = {
	"@context": "https://schema.org",
	"@type": "Organization",
	"name": "BrightGift",
	"url": "https://bright-gift.com",
	"logo": "https://bright-gift.com/bright-gift-logo.png",
	"sameAs": [
		"https://twitter.com/brightgift",
		"https://www.facebook.com/brightgift",
		"https://www.instagram.com/brightgift"
	]
};

// Breadcrumb schema
const breadcrumbData = {
	"@context": "https://schema.org",
	"@type": "BreadcrumbList",
	"itemListElement": [
		{
			"@type": "ListItem",
			"position": 1,
			"name": "Home",
			"item": "https://bright-gift.com"
		}
	]
};

// FAQPage schema
const faqData = {
	"@context": "https://schema.org",
	"@type": "FAQPage",
	"mainEntity": [
		{
			"@type": "Question",
			"name": "How does the AI Gift Idea Generator work?",
			"acceptedAnswer": {
				"@type": "Answer",
				"text": "Our AI Gift Idea Generator uses advanced artificial intelligence to analyze your recipient's interests, style, and budget. It then suggests unique, thoughtful gifts by matching your input to a curated database of products and ideas, ensuring every recommendation is relevant and personalized."
			}
		},
		{
			"@type": "Question",
			"name": "What makes AI gift suggestions better?",
			"acceptedAnswer": {
				"@type": "Answer",
				"text": "AI gift suggestions are tailored to your needs in real time. Unlike generic lists, our AI considers your recipient's personality, preferences, and occasion, delivering creative and unexpected ideas you might not find elsewhere. This saves you time and helps you discover truly memorable gifts."
			}
		},
		{
			"@type": "Question",
			"name": "Are AI gift generators accurate?",
			"acceptedAnswer": {
				"@type": "Answer",
				"text": "AI gift generators become more accurate with detailed input. The more specific information you provide about your recipient's interests, lifestyle, and preferences, the better the recommendations will be. They work best when combined with your personal knowledge of the recipient."
			}
		},
		{
			"@type": "Question",
			"name": "How do I get the best results from AI gift generators?",
			"acceptedAnswer": {
				"@type": "Answer",
				"text": "Provide detailed information about your recipient including their hobbies, lifestyle, recent life changes, and previous gift preferences. Be specific about the occasion and budget. The more context you give, the more personalized and accurate the recommendations will be."
			}
		}
	]
};
---

<Layout 
	title="AI Gift Idea Generator | Find the Perfect Gift in Seconds"
	description="Find the perfect gift in seconds with our AI-powered gift idea generator. Personalized recommendations for any recipient, budget, and occasion. Try our free AI gift finder today!"
	image="/images/homepage-banner.webp"
	keywords={["gift ideas", "AI gifts", "personalized gifts", "gift finder", "gift recommendations", "birthday gifts", "holiday gifts", "AI gift search", "AI gift matching", "AI-powered gift tool"]}
	canonical="https://bright-gift.com"
	ogType="website"
	twitterCard="summary_large_image"
>
	<script type="application/ld+json" set:html={JSON.stringify(structuredData)} />
	<script type="application/ld+json" set:html={JSON.stringify(organizationData)} />
	<script type="application/ld+json" set:html={JSON.stringify(breadcrumbData)} />
	<script type="application/ld+json" set:html={JSON.stringify(faqData)} />

	<main class="font-sans text-gray-800 dark:text-gray-200">
		<!-- Hero Section (responsive, overlapping image on desktop) -->
		<section class="relative w-full bg-[#FEF2D3] shadow-lg border-t-8 border-[#FF6B6B] mt-0 mx-auto px-0 py-0 md:py-6 flex flex-col items-center justify-center min-h-[255px] md:min-h-[350px]">
			<div class="absolute top-0 right-0 mt-4 md:mt-6 mr-4 md:mr-10 flex gap-6 md:gap-8 font-semibold text-[#1C2E4A] text-base md:text-lg z-10">
				<a href="/" class="hover:underline underline-offset-4 rounded">Home</a>
				<a href="/blog" class="hover:underline underline-offset-4 rounded">Blog</a>
				<a href="#about-tool" class="hover:underline underline-offset-4 rounded">About</a>
				<a href="#faq" class="hover:underline underline-offset-4 rounded">FAQ</a>
			</div>
			<div class="flex flex-col md:flex-row items-center justify-center w-full max-w-4xl gap-4 md:gap-8 px-2 md:px-6">
				<div class="flex-1 flex flex-col items-center md:items-start justify-center text-center md:text-left mt-6 md:mt-0">
					<img src="/bright-gift-logo.png" alt="BrightGift logo - AI gift idea generator" class="h-16 md:h-24 mb-2 md:mb-4" />
					<h1 class="text-2xl md:text-4xl font-bold font-poppins text-[#1C2E4A] mb-1 md:mb-2 md:whitespace-nowrap">Find the Perfect Gift with AI!</h1>
					<p class="text-base md:text-lg font-inter text-[#333] mb-2 md:mb-4">AI-powered gift suggestions for any recipient, budget, or occasion. Try our free AI gift finder today!</p>
				</div>
				<div class="flex-1 flex items-center justify-center relative mt-6 md:mt-0">
					<img src="/hero-image.png" alt="AI-powered gift suggestions interface" class="max-h-40 md:max-h-[412px] w-auto md:absolute md:left-1/2 md:-translate-x-1/2" style="bottom:-240px;" />
				</div>
			</div>
		</section>

		<!-- Tool Section -->
		<section id="tool" class="pt-[3.3rem] py-20 px-4">
			<div class="max-w-2xl mx-auto bg-[#A3E4DB] p-10 rounded-2xl shadow-lg">
				<h2 class="text-3xl font-bold text-center mb-8 font-poppins text-[#1C2E4A]">AI Gift Finder</h2>
				<p class="text-center text-[#1C2E4A] mb-4">Powered by advanced AI, our tool finds gifts for any recipient, budget, or occasion. Try AI gift matching now!</p>
				<form aria-label="Gift Finder Form">
					<!-- Recipient Info -->
					<div class="mb-4">
						<label for="recipient" class="block font-bold mb-2 text-[#1C2E4A]">Who are you shopping for?</label>
						<input type="text" id="recipient" name="recipient" aria-required="true" class="w-full px-4 py-3 border-2 border-[#A3E4DB] rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-[#FFDE59] text-[#1C2E4A]" placeholder="e.g., my 30-year-old brother">
					</div>

					<!-- Interests -->
					<div class="mb-4">
						<label for="interests" class="block font-bold mb-2 text-[#1C2E4A]">What do they like?</label>
						<input type="text" id="interests" name="interests" aria-required="true" class="w-full px-4 py-3 border-2 border-[#A3E4DB] rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-[#FFDE59] text-[#1C2E4A]" placeholder="e.g., hiking, sci-fi movies, craft beer">
					</div>

					<!-- Budget -->
					<div class="mb-4">
						<label for="budget" class="block font-bold mb-2 text-[#1C2E4A]">What's your budget?</label>
						<select id="budget" name="budget" aria-required="true" class="w-full px-4 py-3 border-2 border-[#A3E4DB] rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-[#FFDE59] text-[#1C2E4A] text-gray-400">
							<option value="25">Under $25</option>
							<option value="50" selected>Under $50</option>
							<option value="100">Under $100</option>
							<option value="200">Under $200</option>
						</select>
					</div>

					<!-- Style Selector as Chips -->
					<div class="mb-6">
						<label class="block font-bold mb-2 text-[#1C2E4A]">What's the style? (Select up to 3)</label>
						<div class="flex flex-wrap gap-2" role="group" aria-label="Gift Style Selection">
							<button type="button" 
								data-style="eco-friendly"
								class="style-chip bg-[#FFDE59] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FFDE59] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üå± Eco-Friendly
							</button>
							<button type="button" 
								data-style="handmade"
								class="style-chip bg-[#A3E4DB] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#A3E4DB] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üñêÔ∏è Handmade
							</button>
							<button type="button" 
								data-style="funny"
								class="style-chip bg-[#FF6B6B] text-white px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FF6B6B] hover:bg-[#ff4c4c] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üéâ Funny
							</button>
							<button type="button" 
								data-style="pride-gifts"
								class="style-chip bg-[#FFDE59] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FFDE59] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üåà Pride Gifts
							</button>
							<button type="button" 
								data-style="quirky"
								class="style-chip bg-[#A3E4DB] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#A3E4DB] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üí° Quirky
							</button>
							<button type="button" 
								data-style="luxury"
								class="style-chip bg-[#FF6B6B] text-white px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FF6B6B] hover:bg-[#ff4c4c] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üíé Luxury
							</button>
							<button type="button" 
								data-style="techy"
								class="style-chip bg-[#FFDE59] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FFDE59] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üìö Techy
							</button>
							<button type="button" 
								data-style="cultural-gifts"
								class="style-chip bg-[#A3E4DB] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#A3E4DB] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üåç Cultural Gifts
							</button>
							<button type="button" 
								data-style="book-lover"
								class="style-chip bg-[#FFDE59] text-[#1C2E4A] px-4 py-2 rounded-full text-sm font-semibold border-2 border-[#FFDE59] hover:bg-[#FFF9F3] transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-[#FFDE59] focus:ring-offset-2"
								aria-pressed="false">
								üìñ Book Lover
							</button>
						</div>
						<div class="mt-2 text-sm text-[#1C2E4A] opacity-75">
							<span id="selection-count">0</span> of 3 styles selected
						</div>
					</div>

					<!-- Submit Button -->
					<div class="text-center">
						<button type="submit" class="w-full bg-[#FF6B6B] text-white font-bold py-3 px-8 rounded-full hover:bg-[#ff4c4c] transition-colors font-poppins text-lg shadow">
							Generate AI Gift Ideas
						</button>
					</div>
				</form>
			</div>
		</section>

		<!-- Results Section -->
		<section id="results" class="py-20 px-4">
			<div class="max-w-4xl mx-auto">
				<h2 class="text-3xl font-bold text-center mb-12 text-[#1C2E4A]">Your Gift Ideas</h2>
				<!-- Loading state placeholder -->
				<div id="loading" class="text-center hidden">
					<div class="flex flex-col items-center justify-center gap-2">
						<svg class="animate-spin h-11 w-11" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
							<circle class="opacity-100" cx="12" cy="12" r="10" stroke="#A3E4DB" stroke-width="4"></circle>
							<path class="opacity-100" fill="#FF6B6B" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
						</svg>
						<span class="text-[#1C2E4A] font-semibold">Generating ideas...</span>
					</div>
				</div>
				<!-- Results will be injected here -->
				<div id="results-container" class="grid md:grid-cols-2 lg:grid-cols-3 gap-8" role="list" aria-live="polite">
					<p id="empty-state" class="text-center text-gray-400 col-span-full">Enter details above and click Generate to see gift ideas!</p>
				</div>
				<!-- Regenerate Suggestions Button -->
				<div class="text-center mt-8">
					<button id="regenerate-btn" type="button" class="hidden bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-bold py-3 px-8 rounded-full transition-colors font-poppins text-lg shadow" style="display:none;">
						Regenerate Suggestions
					</button>
				</div>
			</div>
		</section>

		<!-- Featured Gift Guides Grid -->
		<div class="w-full bg-[#FEF2D3] py-16 px-8">
			<section id="featured-guides" class="max-w-5xl mx-auto">
				<h2 class="text-3xl font-bold text-center mb-12 font-poppins text-[#1C2E4A]">Featured Gift Guides</h2>
				<div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
					{allContent.length > 0 ? (
						allContent.slice(0, 6).map(item => (
							<article class="bg-[#A3E4DB] rounded-2xl shadow-lg overflow-hidden flex flex-col" tabindex="0" aria-label={`Guide: ${item.data.title}`}> 
								<img src={item.data.image} alt={item.data.title} class="h-40 w-full object-cover rounded-t-xl shadow">
								<div class="p-6 flex-1 flex flex-col">
									<h3 class="font-bold text-lg mb-2 font-poppins text-[#1C2E4A]">{item.data.title}</h3>
									<p class="text-[#333] mb-4 flex-1 font-inter">{item.data.description}</p>
									<a href={`/blog/${item.slug}`} class="mt-auto inline-block bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-bold py-2 px-4 rounded-full transition-colors font-poppins shadow" aria-label={`Read ${item.data.title} guide`}>Read Guide</a>
								</div>
							</article>
						))
					) : (
						<article class="bg-[#A3E4DB] rounded-2xl shadow-lg overflow-hidden flex flex-col" tabindex="0" aria-label="Guide: Coming Soon">
							<div class="h-40 w-full bg-[#A3E4DB] flex items-center justify-center text-[#1C2E4A] opacity-60">No guides yet</div>
							<div class="p-6 flex-1 flex flex-col">
								<h3 class="font-bold text-lg mb-2 font-poppins text-[#1C2E4A]">More Gift Guides Coming Soon</h3>
								<p class="text-[#333] mb-4 flex-1 font-inter">Check back soon for curated gift ideas and inspiration!</p>
							</div>
						</article>
					)}
				</div>
				<div class="text-center mt-10">
					<a href="/blog" class="inline-block bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-bold py-3 px-8 rounded-full transition-colors font-poppins shadow" aria-label="Browse all gift guides">Browse all gift guides</a>
				</div>
			</section>
		</div>

		<!-- About the Tool / SEO Content Block -->
		<section id="about-tool" class="py-16 px-4 max-w-3xl mx-auto text-center" itemscope itemtype="https://schema.org/WebPage">
			<h2 class="text-2xl font-bold mb-4 font-poppins text-[#1C2E4A]" itemprop="headline">About the AI Gift Idea Generator</h2>
			<p class="text-[#333] mb-6 font-inter" itemprop="description">
				Bright Gift's AI Gift Idea Generator helps you find the perfect present for anyone, instantly. Our AI-powered gift finder analyzes your input and delivers creative, relevant gift ideas in seconds. Experience the future of gift shopping with AI-driven recommendations.
			</p>
			<a href="#tool" class="inline-block bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-bold py-3 px-8 rounded-full transition-colors font-poppins text-lg shadow" aria-label="Try the AI Gift Finder now">
				Try the AI Gift Finder
			</a>
		</section>

		<!-- FAQ Section -->
		<section id="faq" class="py-16 px-4 bg-gray-50">
			<div class="max-w-3xl mx-auto">
				<h2 class="text-3xl font-bold text-center mb-12 font-poppins text-[#1C2E4A]">Frequently Asked Questions</h2>
				<div class="space-y-6">
					<div class="bg-white p-6 rounded-lg shadow-md">
						<h3 class="text-xl font-semibold mb-3 text-[#1C2E4A]">How does the AI Gift Idea Generator work?</h3>
						<p class="text-[#333] font-inter">
							Our AI Gift Idea Generator uses advanced artificial intelligence to analyze your recipient's interests, style, and budget. It then suggests unique, thoughtful gifts by matching your input to a curated database of products and ideas, ensuring every recommendation is relevant and personalized.
						</p>
					</div>
					<div class="bg-white p-6 rounded-lg shadow-md">
						<h3 class="text-xl font-semibold mb-3 text-[#1C2E4A]">What makes AI gift suggestions better?</h3>
						<p class="text-[#333] font-inter">
							AI gift suggestions are tailored to your needs in real time. Unlike generic lists, our AI considers your recipient's personality, preferences, and occasion, delivering creative and unexpected ideas you might not find elsewhere. This saves you time and helps you discover truly memorable gifts.
						</p>
					</div>
					<div class="bg-white p-6 rounded-lg shadow-md">
						<h3 class="text-xl font-semibold mb-3 text-[#1C2E4A]">Are AI gift generators accurate?</h3>
						<p class="text-[#333] font-inter">
							AI gift generators become more accurate with detailed input. The more specific information you provide about your recipient's interests, lifestyle, and preferences, the better the recommendations will be. They work best when combined with your personal knowledge of the recipient.
						</p>
					</div>
					<div class="bg-white p-6 rounded-lg shadow-md">
						<h3 class="text-xl font-semibold mb-3 text-[#1C2E4A]">How do I get the best results from AI gift generators?</h3>
						<p class="text-[#333] font-inter">
							Provide detailed information about your recipient including their hobbies, lifestyle, recent life changes, and previous gift preferences. Be specific about the occasion and budget. The more context you give, the more personalized and accurate the recommendations will be.
						</p>
					</div>
				</div>
			</div>
		</section>

	</main>

	<!-- Footer -->
	<footer class="bg-[#1C2E4A] text-white text-sm py-6 mt-16 text-center">
		<div class="flex flex-col items-center gap-2">
			<span class="flex items-center gap-2">
				<img src="/bright-gift-logo.png" alt="" class="h-6 inline" />
				<span>BrightGift &copy; {new Date().getFullYear()}</span>
			</span>
			<span>
				<a href="#about-tool" class="underline hover:no-underline">About</a> &middot;
				<a href="/blog" class="underline hover:no-underline">Blog</a> &middot;
				<a href="/privacy" class="underline hover:no-underline">Privacy</a> &middot;
				<a href="/terms" class="underline hover:no-underline">Terms</a> &middot;
				<a href="/data-deletion" class="underline hover:no-underline">Data Deletion</a>
			</span>
			<span class="opacity-70">"Find the Perfect Gift with AI!"</span>
		</div>
	</footer>
</Layout>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const form = document.querySelector('form');
		const resultsContainer = document.getElementById('results-container');
		const loadingIndicator = document.getElementById('loading');
		const styleButtons = document.querySelectorAll('button[type="button"]');
		const regenerateBtn = document.getElementById('regenerate-btn');
		const emptyState = document.getElementById('empty-state');
		const selectionCount = document.getElementById('selection-count');

		let selectedStyles = [];
		let lastInputs = {};

		// Multi-select style chip functionality
		const styleChips = document.querySelectorAll('.style-chip');
		
		// Store original colors for each button (original BrightGift brand colors)
		const originalColors = {
			'eco-friendly': { bg: 'bg-[#FFDE59]', text: 'text-[#1C2E4A]', border: 'border-[#FFDE59]', hover: 'hover:bg-[#FFF9F3]' },
			'handmade': { bg: 'bg-[#A3E4DB]', text: 'text-[#1C2E4A]', border: 'border-[#A3E4DB]', hover: 'hover:bg-[#FFF9F3]' },
			'funny': { bg: 'bg-[#FF6B6B]', text: 'text-white', border: 'border-[#FF6B6B]', hover: 'hover:bg-[#ff4c4c]' },
			'pride-gifts': { bg: 'bg-[#FFDE59]', text: 'text-[#1C2E4A]', border: 'border-[#FFDE59]', hover: 'hover:bg-[#FFF9F3]' },
			'quirky': { bg: 'bg-[#A3E4DB]', text: 'text-[#1C2E4A]', border: 'border-[#A3E4DB]', hover: 'hover:bg-[#FFF9F3]' },
			'luxury': { bg: 'bg-[#FF6B6B]', text: 'text-white', border: 'border-[#FF6B6B]', hover: 'hover:bg-[#ff4c4c]' },
			'techy': { bg: 'bg-[#FFDE59]', text: 'text-[#1C2E4A]', border: 'border-[#FFDE59]', hover: 'hover:bg-[#FFF9F3]' },
			'cultural-gifts': { bg: 'bg-[#A3E4DB]', text: 'text-[#1C2E4A]', border: 'border-[#A3E4DB]', hover: 'hover:bg-[#FFF9F3]' },
			'book-lover': { bg: 'bg-[#FFDE59]', text: 'text-[#1C2E4A]', border: 'border-[#FFDE59]', hover: 'hover:bg-[#FFF9F3]' }
		};
		
		styleChips.forEach(button => {
			button.addEventListener('click', () => {
				const style = button.dataset.style;
				const isSelected = button.getAttribute('aria-pressed') === 'true';

				if (isSelected) {
					// Deselect the button
					selectedStyles = selectedStyles.filter(s => s !== style);
					button.setAttribute('aria-pressed', 'false');
				} else {
					// Select the button (if under limit)
					if (selectedStyles.length < 3) {
						selectedStyles.push(style);
						button.setAttribute('aria-pressed', 'true');
					}
				}
				
				// Update all button states based on selection
				updateAllButtonStates();
				updateSelectionCount();
			});
		});

		function updateAllButtonStates() {
			styleChips.forEach(button => {
				const style = button.dataset.style;
				const isSelected = button.getAttribute('aria-pressed') === 'true';
				const isDisabled = !isSelected && selectedStyles.length >= 3;
				const originalColor = originalColors[style];
				
				// Remove all color classes first
				button.classList.remove(
					'bg-[#FFDE59]', 'text-[#1C2E4A]', 'border-[#FFDE59]', 'hover:bg-[#FFF9F3]',
					'bg-[#A3E4DB]', 'text-[#1C2E4A]', 'border-[#A3E4DB]', 'hover:bg-[#FFF9F3]',
					'bg-[#FF6B6B]', 'text-white', 'border-[#FF6B6B]', 'hover:bg-[#ff4c4c]',
					'bg-[#FF6B6B]', 'text-white', 'border-[#FF6B6B]', 'shadow-md',
					'bg-white', 'text-gray-600', 'border-gray-300', 'hover:bg-gray-50', 'hover:border-gray-400',
					'opacity-50', 'cursor-not-allowed'
				);
				
				if (isSelected) {
					// Selected state - red background
					button.classList.add('bg-[#FF6B6B]', 'text-white', 'border-[#FF6B6B]', 'shadow-md');
				} else if (selectedStyles.length === 0) {
					// No selections - show original colorful state
					button.classList.add(originalColor.bg, originalColor.text, originalColor.border, originalColor.hover);
				} else {
					// Unselected but some are selected - show transparent/white state
					button.classList.add('bg-white', 'text-gray-600', 'border-gray-300', 'hover:bg-gray-50', 'hover:border-gray-400');
					
					if (isDisabled) {
						button.classList.add('opacity-50', 'cursor-not-allowed');
						button.classList.remove('hover:bg-gray-50', 'hover:border-gray-400');
					}
				}
			});
		}

		form.addEventListener('submit', async (event) => {
			event.preventDefault();
			// Scroll to results section immediately
			document.getElementById('results').scrollIntoView({ behavior: 'smooth' });
			const formData = new FormData(form);
			const recipient = formData.get('recipient');
			const interests = formData.get('interests');
			const budget = formData.get('budget');
			if (!recipient || !interests || !budget) {
				resultsContainer.innerHTML = `<p class="text-red-500 text-center" role="alert">Please fill in all required fields.</p>`;
				return;
			}
			loadingIndicator.classList.remove('hidden');
			resultsContainer.innerHTML = '';

			try {
				const response = await fetch('/api/generate', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify({ recipient, interests, budget, styles: selectedStyles }),
				});
				let errorMsg = 'Failed to get ideas.';
				if (!response.ok) {
					try {
						const err = await response.json();
						errorMsg = err.error || errorMsg;
					} catch {}
					throw new Error(errorMsg);
				}
				const { ideas } = await response.json();
				if (Array.isArray(ideas) && ideas.length) {
					resultsContainer.innerHTML = renderIdeaCards(ideas);
					regenerateBtn.classList.remove('hidden');
					regenerateBtn.style.display = '';
				} else {
					resultsContainer.innerHTML = `<p class="text-red-500 text-center" role="alert">No gift ideas found or failed to parse results. Please try again.</p>`;
					regenerateBtn.classList.add('hidden');
					regenerateBtn.style.display = 'none';
				}
				lastInputs = { recipient, interests, budget, styles: selectedStyles };
			} catch (error) {
				const errorMessage = error.message || "We're having trouble generating gift ideas right now. Please try again in a moment.";
				resultsContainer.innerHTML = `
					<div class="text-center" role="alert">
						<div class="bg-red-50 border border-red-200 rounded-lg p-6 max-w-md mx-auto">
							<div class="flex items-center justify-center mb-3">
								<svg class="w-6 h-6 text-red-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
								</svg>
								<span class="text-red-800 font-semibold">Oops! Something went wrong</span>
							</div>
							<p class="text-red-700 text-sm">${errorMessage}</p>
							<button onclick="location.reload()" class="mt-4 bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-semibold py-2 px-4 rounded-full transition-colors text-sm">
								Try Again
							</button>
						</div>
					</div>`;
				regenerateBtn.classList.add('hidden');
				regenerateBtn.style.display = 'none';
			} finally {
				loadingIndicator.classList.add('hidden');
			}
		});

		regenerateBtn.addEventListener('click', async () => {
			if (!lastInputs.recipient) return;
			// Scroll to results section before clearing results
			document.getElementById('results').scrollIntoView({ behavior: 'smooth' });
			loadingIndicator.classList.remove('hidden');
			resultsContainer.innerHTML = '';
			try {
				const response = await fetch('/api/generate', {
					method: 'POST',
					headers: { 'Content-Type': 'application/json' },
					body: JSON.stringify(lastInputs),
				});
				if (!response.ok) throw new Error('Failed to get ideas.');
				const { ideas } = await response.json();
				resultsContainer.innerHTML = renderIdeaCards(ideas);
				regenerateBtn.classList.add('hidden');
				regenerateBtn.style.display = 'none';
			} catch (error) {
				const errorMessage = error.message || "We're having trouble generating gift ideas right now. Please try again in a moment.";
				resultsContainer.innerHTML = `
					<div class="text-center" role="alert">
						<div class="bg-red-50 border border-red-200 rounded-lg p-6 max-w-md mx-auto">
							<div class="flex items-center justify-center mb-3">
								<svg class="w-6 h-6 text-red-500 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
								</svg>
								<span class="text-red-800 font-semibold">Oops! Something went wrong</span>
							</div>
							<p class="text-red-700 text-sm">${errorMessage}</p>
							<button onclick="location.reload()" class="mt-4 bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-semibold py-2 px-4 rounded-full transition-colors text-sm">
								Try Again
							</button>
						</div>
					</div>`;
				regenerateBtn.classList.add('hidden');
				regenerateBtn.style.display = 'none';
			} finally {
				loadingIndicator.classList.add('hidden');
			}
		});

		function updateSelectionCount() {
			selectionCount.textContent = `${selectedStyles.length} of 3 styles selected`;
		}
	});

	function renderIdeaCards(ideas) {
		const iconSvgMap = {
			DeviceMobile: '/icons/DeviceMobile.svg',
			Book: '/icons/Book.svg',
			TShirt: '/icons/TShirt.svg',
			House: '/icons/House.svg',
			Tree: '/icons/Tree.svg',
			CookingPot: '/icons/CookingPot.svg',
			PuzzlePiece: '/icons/PuzzlePiece.svg',
			Flower: '/icons/Flower.svg',
			SoccerBall: '/icons/SoccerBall.svg',
			PawPrint: '/icons/PawPrint.svg',
			Baby: '/icons/Baby.svg',
			Car: '/icons/Car.svg',
			Briefcase: '/icons/Briefcase.svg',
			MusicNote: '/icons/MusicNote.svg',
			Heartbeat: '/icons/Heartbeat.svg',
			ShoppingBag: '/icons/ShoppingBag.svg',
			BeerBottle: '/icons/BeerBottle.svg',
			Pencil: '/icons/Pencil.svg',
			Package: '/icons/Package.svg',
			Wrench: '/icons/Wrench.svg',
			Smiley: '/icons/Smiley.svg',
			Diamond: '/icons/Diamond.svg',
			PaintBrush: '/icons/PaintBrush.svg',
			Sparkle: '/icons/Sparkle.svg',
			Backpack: '/icons/Backpack.svg',
			Shield: '/icons/Shield.svg',
			Scissors: '/icons/Scissors.svg',
			Palette: '/icons/Palette.svg',
			FilmSlate: '/icons/FilmSlate.svg',
			Lamp: '/icons/Lamp.svg',
			Note: '/icons/Note.svg',
			Ticket: '/icons/Ticket.svg',
			FrameCorners: '/icons/FrameCorners.svg',
			Gift: '/icons/Gift.svg'
		};
		return ideas.map(idea => {
			let iconHtml = '';
			if (idea.icon) {
				const iconPath = iconSvgMap[idea.icon] || iconSvgMap['ShoppingBag'];
							// Use SVG's built-in color (#1C2E4A) without CSS filter for better compatibility
			iconHtml = `<img src="${iconPath}" alt="${idea.icon || 'ShoppingBag'} icon" class="h-20 w-20 mb-6 mt-2" loading="lazy" />`;
			}
			return `
				<div class="flex flex-col items-center justify-between bg-[#A3E4DB] rounded-2xl shadow-lg p-8 min-h-[480px] transition-transform hover:-translate-y-1 hover:shadow-2xl animate-fade-in" role="listitem">
					${iconHtml || (idea.image ? `<img src="${idea.image}" alt="${idea.title}" class="h-40 w-full object-cover mb-4 rounded-xl shadow" loading="lazy">` : '')}
					<h3 class="font-bold text-2xl mb-3 font-poppins text-[#1C2E4A] text-center">${idea.title}</h3>
					<p class="text-[#333] mb-4 font-inter text-base text-center line-clamp-4">${idea.description}</p>
					${idea.tag ? `<span class="inline-block bg-[#FFDE59] text-[#1C2E4A] text-xs font-semibold px-4 py-1 rounded-full mb-6 mt-auto">${idea.tag}</span>` : ''}
					<a href="${idea.link}" target="_blank" rel="nofollow noopener" class="w-full bg-[#FF6B6B] hover:bg-[#ff4c4c] text-white font-bold py-3 rounded-full transition-colors font-poppins text-lg shadow text-center" aria-label="View ${idea.title} (affiliate link)">
						Find on ${/bookshop/i.test(idea.link) ? 'Bookshop.org' : 'Amazon'}
					</a>
				</div>
			`;
		}).join('');
	}

	const style = document.createElement('style');
	style.innerHTML = `
		@keyframes fadeIn {
			from { opacity: 0; transform: translateY(10px); }
			to { opacity: 1; transform: translateY(0); }
		}
		.animate-fade-in {
			animation: fadeIn 0.5s ease-out forwards;
		}
		
		/* Style chip animations and states */
		.style-chip {
			transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
		}
		
		.style-chip:hover:not(.cursor-not-allowed) {
			transform: translateY(-1px);
		}
		
		.style-chip:active {
			transform: translateY(0);
		}
		
		/* Selected state with subtle glow */
		.style-chip[aria-pressed="true"] {
			box-shadow: 0 4px 12px rgba(255, 107, 107, 0.3);
		}
		
		/* Disabled state */
		.style-chip.cursor-not-allowed {
			pointer-events: none;
		}
	`;
	document.head.appendChild(style);
</script> 